# syntax=docker/dockerfile:1.6

# Unified Muto image (ROS 2 default: humble) - Podman Containerfile
# The ROS distribution can be overridden at build time:
#   podman build --build-arg ROS_DISTRO=iron -t muto:ros2-iron .

# Declare ROS_DISTRO once (available to all stages) with a default of humble
ARG ROS_DISTRO=humble

FROM ros:${ROS_DISTRO} AS builder
ARG ROS_DISTRO
ENV ROS_DISTRO=${ROS_DISTRO}

ENV DEBIAN_FRONTEND=noninteractive \
    LANG=en_US.UTF-8 \
    LC_ALL=en_US.UTF-8 \
    APP_WS=/opt/muto_ws

# Build toolchain and colcon/rosdep
RUN apt-get update && apt-get install -y --no-install-recommends \
    locales \
    build-essential cmake ssh curl git rsync bc \
    python3-pip python3-colcon-common-extensions python3-rosdep \
    python3-jsonschema python3-requests \
    python3-flake8 python3-autopep8 \
    python3-coverage \
    ros-${ROS_DISTRO}-ackermann-msgs \
    ros-${ROS_DISTRO}-image-transport \
    ros-${ROS_DISTRO}-cv-bridge \
    ros-${ROS_DISTRO}-apriltag-msgs \
    ros-${ROS_DISTRO}-tf2-ros \
    ros-${ROS_DISTRO}-sensor-msgs \
    ros-${ROS_DISTRO}-demo-nodes-cpp \
 && rm -rf /var/lib/apt/lists/* \
 && locale-gen en_US.UTF-8 \
 && update-locale LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8
ENV SHELL /bin/bash
ENV PIP_BREAK_SYSTEM_PACKAGES=1

# RUN pip3 install install setuptools==58.2.0 
# RUN pip3 "paho-mqtt>2.0.0" paho-mqtt --break-system-packages

SHELL ["/bin/bash","-lc"]
RUN rosdep init || true && rosdep update || true && \
        if [ "${ROS_DISTRO}" = "humble" ]; then \
            pip3 install --no-cache-dir 'paho-mqtt>1.6.1'; \
        else \
            pip3 install --no-cache-dir 'paho-mqtt>1.6.1' --break-system-packages; \
        fi

WORKDIR /work

# Bring in all sources and runtime assets
COPY src ./src
COPY launch ./launch
COPY config ./config

# Prepare workspace and resolve deps
RUN mkdir -p ${APP_WS}/src && rsync -a src/ ${APP_WS}/src/ && \
    bash -c "source /opt/ros/${ROS_DISTRO}/setup.bash && \
    rosdep install --from-paths ${APP_WS}/src --ignore-src -r -y"

# Build all Muto packages into one merged install
RUN bash -c "source /opt/ros/${ROS_DISTRO}/setup.bash && \
    cd ${APP_WS} && rosdep install --from-paths src --ignore-src -r -y &&  colcon build --merge-install && \
    source install/setup.bash && \
    colcon test --merge-install  --event-handlers console_direct+"

## Runtime image kept slim but based on the selected ROS distribution
FROM ros:${ROS_DISTRO} AS runtime
ARG ROS_DISTRO
ENV ROS_DISTRO=${ROS_DISTRO}
ENV DEBIAN_FRONTEND=noninteractive \
    LANG=en_US.UTF-8 \
    LC_ALL=en_US.UTF-8 \
    APP_WS=/opt/muto_ws

# Install runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    locales \
    build-essential cmake ssh curl git rsync bc \
    python3-pip python3-colcon-common-extensions python3-rosdep \
    python3-jsonschema python3-requests \
    python3-flake8 python3-autopep8 \
    python3-jsonschema  \
    ros-${ROS_DISTRO}-ackermann-msgs \
    ros-${ROS_DISTRO}-image-transport \
    ros-${ROS_DISTRO}-cv-bridge \
    ros-${ROS_DISTRO}-apriltag-msgs \
    ros-${ROS_DISTRO}-tf2-ros \
    ros-${ROS_DISTRO}-sensor-msgs \
    ros-${ROS_DISTRO}-demo-nodes-cpp \
 && rm -rf /var/lib/apt/lists/* 

ENV PIP_BREAK_SYSTEM_PACKAGES=1

# Install newer paho-mqtt via pip (Ubuntu repo version may be 1.6.1)
RUN if [ "${ROS_DISTRO}" = "humble" ]; then \
            pip3 install --no-cache-dir 'paho-mqtt>1.6.1'; \
        else \
            pip3 install --no-cache-dir 'paho-mqtt>1.6.1' --break-system-packages; \
        fi


# Copy built artifacts and runtime assets
COPY --from=builder ${APP_WS}/install ${APP_WS}/install
COPY --from=builder /work/launch /work/launch
COPY --from=builder /work/config /work/config

# Provide an entrypoint that sources environments and runs launch
COPY container/entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

WORKDIR /work

# Helpful metadata
ARG VCS_REF=""
ARG BUILD_DATE=""
LABEL org.opencontainers.image.title="muto" \
    org.opencontainers.image.description="Unified Muto image (core/messages/agent/composer) for ROS 2" \
    org.opencontainers.image.source="https://github.com/eclipse-muto/muto" \
    org.opencontainers.image.revision="$VCS_REF" \
    org.opencontainers.image.created="$BUILD_DATE" \
    io.ros.distro="${ROS_DISTRO}"

# Default launch file can be overridden at runtime via MUTO_LAUNCH
ENV MUTO_LAUNCH=/work/launch/muto.launch.py \
    MUTO_LAUNCH_ARGS=""

ENTRYPOINT ["/entrypoint.sh"]
